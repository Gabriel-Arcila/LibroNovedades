@page "/Historico"
@inject IDataArea DataArea;
@inject IDataCentro DataCentro;
@inject IDataLinea DataLinea;
@inject IDataAPIOEE DataAPIOEE;
@inject IDataLibroNov DataLibroNov;
@inject IDataTiParTP DataTiParTP;

<PageTitle>Historico</PageTitle>

<BSContainer PaddingBottom="Padding.Large">
     <BSRow>
        <h1 class="titulo">Historico</h1>
    </BSRow>
</BSContainer>

<BSCard CardType="CardType.Card" style="width: 90%;" MarginBottom="Margins.Large">
    <BSAlert IsOpen="_showTooltip" style="height:55px;" class="alertaInfo" IsDismissible="true" @ref="_alertRef" Dismissed="Dismissed">
        <h5>@mensaje</h5>
    </BSAlert>
    <BSCard CardType="CardType.Body">
        <BSCard CardType="CardType.Text">
            <BSRow>
                <BSCol Position="Position.Relative" Place ColumnMedium="3">
                    <BSLabel class="labelFormulario">Fecha</BSLabel>
                    <BSInput BSInput InputType="InputType.Date" rows="1" @bind-Value="filtroFecha"></BSInput>
                </BSCol>
                <BSCol Position="Position.Relative" Place ColumnMedium="3">
                    <BSLabel class="labelFormulario">Linea</BSLabel>
                        <BSInput  InputType="InputType.Select" @bind-Value="filtroLinea">
                            <option value="0">Seleccionar la Linea</option>
                            @if (listaLineas != null)
                            {
                                <option value="0">Todos</option>
                                @foreach (var item in listaLineas)
                                {
                                    <option value="@item.IdLinea">@item.Lnom</option>
                                }
                            }
                        </BSInput>
                </BSCol>
                <BSCol Position="Position.Relative" Place ColumnMedium="5">
                    <BSLabel class="labelFormulario">Tipo de Novedad</BSLabel>
                        <BSInput  InputType="InputType.Select" @bind-Value="filtroTipoNovedad">
                            <option value="0">Seleccionar el Tipo de Novedad</option>
                            @if (listaTiposNovedad != null)
                            {
                                <option value="0">Todos</option>
                                @foreach (var item in listaTiposNovedad)
                                {
                                    <option value="@item.IdTiParTp">@item.Tpnombre.ToUpper()</option>
                                }   
                            }
                        </BSInput>
                </BSCol>
            </BSRow> 
            <br>
            <BSRow>
                <BSCol Position="Position.Relative" Place ColumnMedium="4">
                    <BSButton class="buttonFormularioOK" IsDisabled="@isDisabled"  @onclick="buscar">Buscar</BSButton>
                </BSCol>
            </BSRow>
            @if (listaNovedades != null)
            {
                <br>
                <br>
                <BSTable IsResponsive="true" IsStriped="true">
                    <BSTHead>
                        <BSTR class="cabeceraTabla">
                            <BSTD>Linea</BSTD>
                            <BSTD>ID Maquina</BSTD>
                            <BSTD>ID Equipo</BSTD>
                            <BSTD>Grupo</BSTD>
                            <BSTD>Turno</BSTD>
                            <BSTD>Tiempo Perdido (min)</BSTD>
                        </BSTR>
                    </BSTHead>
                    <BSTBody class="cuerpoTabla">
                        @foreach (var item in listaNovedades){
                            <BSTR>
                                <BSTD>@item.IdLineaNavigation.Lnom</BSTD>
                                <BSTD>@item.IdMaquina</BSTD>
                                <BSTD>@item.IdEquipo</BSTD>
                                <BSTD>@item.Rdgrupo</BSTD>
                                <BSTD>@item.RdTurno</BSTD>
                                <BSTD>@item.RdtiePerMi.ToString().Substring(0,5).Replace(".",",")</BSTD>
                            </BSTR>
                            <BSTR>
                                <BSTD>@discrepancia  @item.Rddiscrepa</BSTD>
                            </BSTR>
                        }
                    </BSTBody>
                </BSTable>
            }
        </BSCard>
    </BSCard>
</BSCard>


@code{
    private string mensaje { get; set;}
    private BSAlert _alertRef;
    private bool _buttonDisabled = true;
    private DateTime filtroFecha { get; set;}
    private int filtroTipoNovedad { get; set;}
    private int filtroLinea { get; set;}
    private List<LibroNove> listaNovedades { get; set;}
    private List<TiParTp> listaTiposNovedad { get; set;}
    private List<Linea> listaLineas { get; set;}
    private bool isDisabled  { get; set;}

    private string discrepancia  { get; set;}
    //private 

    protected override async Task  OnInitializedAsync()
    {
        mensaje = "Historico de registro de las novedades";
        listaTiposNovedad = await DataTiParTP.ObtenerTodosTiposNovedad();
        listaLineas = await DataLinea.ObtenerTodasLasLineas();
        filtroFecha = DateTime.Now.Date;
        isDisabled = false;
        discrepancia = "Discrepancia: ";
        
    }

    protected async Task buscar(){
        listaNovedades = await DataLibroNov.ObtenerLibroNovedadesPorFiltro(filtroFecha,filtroLinea,filtroTipoNovedad);
    }

    private void Dismissed()
    {
        _buttonDisabled = false;
    }

}
